<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyu.boardsolution.dao.WriteBoardDAO">
	<!-- 모든 id는 [쿼리구분][테이블명][메서드명]으로 작성 -->
	<!-- 특정 게시판이 존재하는 지 여부 0이면 없음, 1이상이면 존재함 컬럼및 테이블명을 ""로 감쌀것. -->
	<select id="selectWriteBoardExistingCheck" parameterType="java.util.HashMap" resultType="int">
		select
			count(*)
		from
			"board"
		where
			"bo_table"=#{bo_table}
	</select>
	
	<!-- 모든 게시판 목록 가져오기 -->
	<select id="selectBoardList" resultType="BoardVO">
		select
			*
		from
			"board"
	</select>
	
	<!-- 특정 게시판의 전체 게시글 갯수 가져오기 "${bo_table}" 입력해야 "테이블이름" 이렇게 매핑됨. -->
	<select id="selectWriteBoardGetCount" parameterType="java.util.HashMap" resultType="int">
		select
			count(*)
		from
			"${bo_table}"
	</select>
	<!-- start ~ end 까지 특정 게시판 하나의 페이지 정보 가져오기 -->
	<select id="selectWriteBoardGetList" parameterType="java.util.HashMap" resultType="WriteBoardVO">
		<![CDATA[
			select
				R.*
			from
				(select
					rownum rnum, Q.*
				from
					(select
						*
					from
						"${bo_table}"
					order by
						"wr_id" desc) Q
				where
					rownum<=#{endNo}) R
			where
				rnum>=#{startNo}
		]]>	
	</select>
	
	<!-- 전체 게시판의 게시글 갯수 가져오기 -->
	<select id="selectAllWriteBoardGetCount" resultType="int">
		SELECT
			SUM("bo_count_write")
		FROM
			"board"
	</select>
	
	<!--
		start ~ end 까지 모든 게시판의 페이지 정보 가져오기 
		존재하는 모든 테이블을 UNION 하여 리턴
	-->
	<select id="selectAllWriteBoardGetList" parameterType="java.util.HashMap" resultType="WriteBoardVO">
		
		select
			R.*
		from
			(select
				rownum rnum, Q.*
			from
				(select
					*
				from
					<foreach collection="bo_table_list" item="item" index="index" separator="union all" open="(" close=")">
						select * from "${item.bo_table}"
					</foreach>
				order by
					"wr_id" desc) Q
			where
				rownum <![CDATA[ <= ]]> #{endNo}) R
		where
			rnum <![CDATA[ >= ]]> #{startNo}
		
	</select>
	
	<!-- insert -->
	<!--
		글작성하는 쿼리
		insert 게시판 이름 및 내용 받아서 특정 게시판에 글 작성하기 게시글 고유번호와, 정렬번호 둘다 1씩 증가 
		board 테이블의 "bo_table"='특정 게시판 이름' 조건으로 찾아 bo_count_write 증가 시킬것
	-->
	<!-- 모든 게시판에서 공통으로 사용할 고유번호 SEQUENCE "write_wr_id_seq" -->
	<!-- 특정 게시판 내부 글 번호 게시판 생성시 함께 생성하는 SEQUENCE "${bo_table}_wr_num_seq" -->
	<insert id="insertWriteBoardContent" parameterType="java.util.HashMap">
		INSERT INTO "${bo_table}"
		VALUES ("write_wr_id_seq".nextval.nextval, "${bo_table}_wr_num_seq".nextval, #{vo.wr_reply}, #{vo.wr_parent}, #{vo.wr_is_comment},
			#{vo.wr_comment}, #{vo.wr_comment_reply}, #{vo.ca_name}, #{vo.wr_option}, #{vo.wr_subject},
			#{vo.wr_content}, #{vo.wr_link1}, #{vo.wr_link2}, #{vo.wr_link1_hit}, #{vo.wr_link2_hit},
			#{vo.wr_hit}, #{vo.wr_good}, #{vo.wr_nogood}, #{vo.mb_id}, #{vo.wr_password},
			#{vo.wr_name}, #{vo.wr_email}, #{vo.wr_homepage}, SYSDATE, #{vo.wr_file}, 
			TO_CHAR(SYSDATE, 'YY-MM-DD'), #{vo.wr_ip}, '', '', '',
			'', '', '', '', '',
			'', '', '', '')
	</insert>
	
	<!-- board 테이블의 특정 테이블(bo_table값)을 찾아 bo_count_write 증가시키는 쿼리 -->
	<update id="updateBoardBoCountWriteUp" parameterType="java.util.HashMap">
		update
			board
		set
			"bo_count_write"="bo_count_write"+1
		where
			"bo_table"=#{bo_table}
	</update>
	<!-- insert -->

	<!-- 게시글이 속한 테이블은 jsp 페이지에 hidden 필드로 넣을 예정 -->
	<!-- 게시글 고유번호, 게시판 이름, 정렬 번호로 하나 가져오기 -->
	<select id="selectWriteBoardByWrId" resultType="WriteBoardVO" parameterType="java.util.HashMap">
		select
			*
		from
			"${bo_table}"
		where
			"wr_id"=#{wr_id}
	</select>
	
	<!-- update 게시글 고유번호, 게시판 이름, 게시판 정렬번호 및 유저 정보로 게시글 수정하기
	board 테이블의 "bo_table"='특정 게시판 이름' 조건으로 찾아 bo_count_write 증가 시키지 않음 -->
	<update id="updateWriteBoardContent" parameterType="java.util.HashMap">
		update
			"${bo_table}"
		set
			"ca_name"=#{vo.ca_name},
			"wr_option"=#{vo.wr_option},
			"wr_subject"=#{vo.wr_subject},
			"wr_content"=#{vo.wr_content},
			"wr_link1"=#{vo.wr_link1},
			"wr_link2"=#{vo.wr_link2},
			"wr_file"=#{vo.wr_file},
			"wr_last"=TO_CHAR(SYSDATE, 'YY-MM-DD'),
			"wr_ip"=#{vo.wr_ip}
		where
			"wr_id"=#{wr_id}
	</update>
	
	<!-- delete -->
	<!-- delete 게시글 고유번호, 게시판 이름, 게시판 정렬번호 및 유저 정보로 게시글 삭제하기
	board 테이블의 "bo_table"='특정 게시판 이름' 조건으로 찾아 bo_count_write 감소시키기 -->
	<delete id="deleteWriteBoardContent" parameterType="java.util.HashMap">
		delete
		from
			"${bo_table}"
		where
			"wr_id"=#{wr_id}
	</delete>

	<!-- board 테이블의 특정 테이블(bo_table값)을 찾아 bo_count_write 감소시키는 쿼리 -->
	<update id="updateBoardBoCountWriteDown" parameterType="java.util.HashMap">
		update
			board
		set
			"bo_count_write"="bo_count_write"-1
		where
			"bo_table"=#{bo_table}
	</update>
	<!-- delete -->	
</mapper>